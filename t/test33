# test30

# Before `make install' is performed this script should be runnable with
# `make test'. After `make install' it should work as `perl test.pl'

######################### We start with some black magic to print on failure.

END {print "not ok 1\n" unless $loaded;} 
use Test::Simple tests =>
7;
use lib ("/Users/jimk/tmp/work", "/Users/jimk/tmp/work/t");
use List::Compare::Functional qw(:originals);
use Test::ListCompareSpecial qw(:seen);
use Data::Dumper;

$loaded = 1;
ok($loaded);

######################### End of black magic.

my (%seen, @seen);
my ($unique_all_ref, $complement_all_ref);

my @a0 = qw(abel abel baker camera delta edward fargo golfer);
my @a1 = qw(baker camera delta delta edward fargo golfer hilton);
my @a2 = qw(fargo golfer hilton icon icon jerky);
my @a3 = qw(fargo golfer hilton icon icon);
my @a4 = qw(fargo fargo golfer hilton icon);

my (%h0, %h1, %h2, %h3, %h4);
$h0{$_}++ for @a0;
$h1{$_}++ for @a1;
$h2{$_}++ for @a2;
$h3{$_}++ for @a3;
$h4{$_}++ for @a4;

eval { @memb_arr = is_member_which( { lists => [ \@a0, \@a1, \@a2, \@a3, \@a4 ] } ) };
ok(ok_capture_error($@));

eval { $memb_arr_ref = is_member_which_ref( { lists => [ \@a0, \@a1, \@a2, \@a3, \@a4 ] } ) };
ok(ok_capture_error($@));

eval { ok(is_member_any( { lists => [ \@a0, \@a1, \@a2, \@a3, \@a4 ] } )) };# 420
ok(ok_capture_error($@));

eval { $memb_hash_ref = are_members_which( {
    lists => [ \@a0, \@a1, \@a2, \@a3, \@a4 ] , 
} ) };
ok(ok_capture_error($@));

eval { $memb_hash_ref = are_members_any( {
    lists => [ \@a0, \@a1, \@a2, \@a3, \@a4 ],
} ) };
ok(ok_capture_error($@));

eval { @memb_arr = is_member_which( { lists => [ \@a0, \@a1, \@a2, \@a3, \@a4 ],
	strange => [0,1], 
} ) };
ok(ok_capture_error($@));

